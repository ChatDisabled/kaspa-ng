[package]
name = "kaspa-ng-core"
version.workspace = true
edition.workspace = true # = "2021"

[lib]
crate-type = ["cdylib", "lib"]

[features]
browser-extension = []
desktop-application = []
default = []

[dependencies]
kaspa-ng-macros.workspace = true

kaspa-consensus-core.workspace = true
kaspa-wallet-core.workspace = true
kaspa-rpc-core.workspace = true
kaspa-wrpc-client.workspace = true
kaspa-utils.workspace = true
kaspa-bip32.workspace = true

workflow-log.workspace = true
workflow-core.workspace = true
workflow-dom.workspace = true
workflow-store.workspace = true


cfg-if.workspace = true
log.workspace = true
serde.workspace = true
thiserror.workspace = true
derivative.workspace = true
downcast.workspace = true
downcast-rs.workspace = true
separator.workspace = true
futures.workspace = true
futures-util.workspace = true
zeroize.workspace = true
async-trait.workspace = true
slug.workspace = true
qrcode.workspace = true
js-sys.workspace = true
wasm-bindgen.workspace = true

egui.workspace = true
egui_extras.workspace = true
eframe = { workspace = true, default-features = false, features = [
    "accesskit",     # Make egui comptaible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
] }
egui-phosphor = { workspace = true, features = ["thin","light","regular","bold"] }
egui-notify.workspace = true

[dependencies.web-sys]
workspace = true
features = [
    # 'console',
    # 'Document',
    # 'Element',
    # 'HtmlElement',
    'Window',
]


# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
kaspad.workspace = true
kaspa-rpc-service.workspace = true
kaspa-wrpc-server.workspace = true
kaspa-core.workspace = true
kaspa-metrics.workspace = true
tokio.workspace = true
ctrlc.workspace = true
env_logger.workspace = true
num_cpus.workspace = true
clap.workspace = true

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures.workspace = true

# [profile.release]
# opt-level = 2 # fast and small wasm

